#1 - Создание словаря с возможностью удаления
students={
    'Михаил' : 'Староста',
    'Айгуль' : 'Зав.староста',
    'Василий' : 'Отличник',
    'Ваня' : 'Прогульщик',
    'Дмитрий' : 'Обычный студент №1',
    'Мария' : 'Обычный студент №2'
}
print(students)
del_name = input('Введите имя студента, которого нужно отчислить: ')
if del_name in students:
    del students[del_name]
    print('Обновленный список', students)
else:
    print('Такого студента нет в группе')
print('--------------------------------------------------------------')


#2 - Пересечение множеств - разобрали на лекции

#3 Создание словаря страны и множеств с функуционалом добавления
directory = {
    'Russia' : 'Moscow',
}
update_directory = input('Введите страну и город этой страны через пробел: ')
try:
    country, city = update_directory.split()
    directory[country] = city
    print(f"{country}: {city} успешно добавлено в справочник!")
except ValueError:
    print("Пожалуйста, введите страну и город, разделенные пробелом.")
print('--------------------------------------------------------------')


# 4 - Словарь инвертарь
inventory = {
    1: {'имя': 'Товар1', 'количество': 10, 'цена': 100.0},
    2: {'имя': 'Товар2', 'количество': 15, 'цена': 150.0},
    3: {'имя': 'Товар3', 'количество': 20, 'цена': 200.0}
}

# 5 - функция поиск товара
def поиск_товара(id):
    print(f'Информация о товаре с идентификатором {id}: {inventory[id]}')
    
поиск_товара(2)
print('--------------------------------------------------------------')

# 6 - функция подсчет стоимости товаров в инвентаре
def подсчет_стоимости():
    sum = 0
    for k, v in inventory.items():
        sum +=  v['цена']
    print(sum) 

подсчет_стоимости()
print('--------------------------------------------------------------')

#7 Два множества с некоторыми общими элементами
set1 = {1, 5, 7, 8, 9, 55, 61, 74}
set2 = {4, 8, 9, 66, 102, 74, 99}

#8 функ-ция нахождения пересечений
def нахождение_пересечений(a, b):
    print(a.intersection(b))

нахождение_пересечений(set1, set2)
print('--------------------------------------------------------------')
 
 #9 ф-ция нахождения объединений
def нахождение_объединений(a, b):
    print(a.difference(b))

нахождение_объединений(set1, set2)